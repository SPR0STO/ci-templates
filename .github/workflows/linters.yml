name: centralized linters

on:
  pull_request:
    branches:
      - main
      - acceptance
      - production
  workflow_dispatch:
  workflow_call:
    inputs:
      runner_os:
        required: false
        type: string
        default: "ubuntu-latest"
      linters:
        required: false
        type: string
        default: |
          - yamllint
          - black
          - hadolint
          - shfmt
          - shellcheck
          - markdownlint

jobs:

# yamllint
  yamllint:
    if: contains(fromJson(inputs.linters), 'yamllint')
    runs-on: ${{ inputs.runner_os }}
    steps:
# Fetching and get difference
      - uses: ./.github/actions/filter-diff
        id: diff
        with:
          base_ref: ${{ github.base_ref }}
          file_pattern: '\.ya?ml$'
          output_file: diff.txt
# Installation
      - name: Linux runner setup
        if: runner.os == 'Linux' && steps.diff.outputs.found == 'true'
        run: |
          python3 -m pip install --user --upgrade pip
          python3 -m pip install --user yamllint
          USERBASE=$(python3 -m site --user-base)
          echo "USERBASE=$USERBASE" >> "$GITHUB_ENV"
          echo "PATH=$PATH:$USERBASE/bin" >> "$GITHUB_ENV"

      - name: macOS runner setup
        if: runner.os == 'macOS' && steps.diff.outputs.found == 'true'
        shell: bash
        run: |
          python3 -m venv venv
          . venv/bin/activate
          pip install --upgrade pip
          pip install yamllint
          echo "VENV_PATH=$(pwd)/venv/bin" >> "$GITHUB_ENV"

      - name: Windows runner setup
        if: runner.os == 'Windows' && steps.diff.outputs.found == 'true'
        shell: pwsh
        run: |
          pip install yamllint
          $pyver = python -c "import sys; print(f'Python{sys.version_info.major}{sys.version_info.minor}')"
          $userBin = "$env:APPDATA\Python\$pyver\Scripts"
          echo "USER_BIN=$userBin" | Out-File -FilePath $env:GITHUB_ENV -Append
# Linting
      - name: Linting on Linux runner
        if: runner.os == 'Linux' && steps.diff.outputs.found == 'true'
        shell: bash
        run: |
          if [ -f .yamllint.yaml ]; then
            xargs yamllint -c .yamllint.yaml < diff.txt
          else
            xargs yamllint < diff.txt
          fi

      - name: Linting on macOS runner
        if: runner.os == 'macOS' && steps.diff.outputs.found == 'true'
        shell: bash
        run: |
          if [ -f .yamllint.yaml ]; then
            xargs yamllint -c .yamllint.yaml < diff.txt
          else
            xargs yamllint < diff.txt
          fi

      - name: Linting on Windows runner
        if: runner.os == 'Windows' && steps.diff.outputs.found == 'true'
        shell: pwsh
        run: |
          $env:Path += ";$env:USER_BIN"
          if (Test-Path .yamllint.yaml) {
            Get-Content diff.txt | ForEach-Object { yamllint -c .yamllint.yaml $_ }
          } else {
            Get-Content diff.txt | ForEach-Object { yamllint $_ }
          }

# hadolint
  hadolint:
    if: contains(fromJson(inputs.linters), 'hadolint')
    runs-on: ${{ inputs.runner_os }}
    steps:
      # Fetching and get difference
      - uses: ./.github/actions/filter-diff
        id: diff
        with:
          base_ref: ${{ github.base_ref }}
          file_pattern: '(^|/)Dockerfile([^.]*$|[.].*$)'
          output_file: diff.txt
# Installation
      - name: Linux runner setup
        if: runner.os == 'Linux' && steps.diff.outputs.found == 'true'
        run: |
          wget -O hadolint "https://github.com/hadolint/hadolint/releases/latest/download/hadolint-$(uname -s)-$(uname -m)"
          chmod +x hadolint && sudo mv hadolint /usr/local/bin/

      - name: macOS runner setup
        if: runner.os == 'macOS' && steps.diff.outputs.found == 'true'
        shell: bash
        run: |
          brew install hadolint

      - name: Windows runner setup
        if: runner.os == 'Windows' && steps.diff.outputs.found == 'true'
        shell: pwsh
        run: |
          choco install hadolint
# Linting
      - name: Linting on Linux runner
        if: runner.os == 'Linux' && steps.diff.outputs.found == 'true'
        shell: bash
        run: |
          if [ -f .hadolint.yaml ]; then
            xargs hadolint -c .hadolint.yaml < diff.txt
          else
            xargs hadolint < diff.txt
          fi

      - name: Linting on macOS runner
        if: runner.os == 'macOS' && steps.diff.outputs.found == 'true'
        shell: bash
        run: |
          if [ -f .hadolint.yaml ]; then
            xargs hadolint -c .hadolint.yaml < diff.txt
          else
            xargs hadolint < diff.txt
          fi

      - name: Linting on Windows runner
        if: runner.os == 'Windows' && steps.diff.outputs.found == 'true'
        shell: pwsh
        run: |
          $env:Path += ";$env:USER_BIN"
          if (Test-Path .hadolint.yaml) {
            Get-Content diff.txt | ForEach-Object { hadolint -c .hadolint.yaml $_ }
          } else {
            Get-Content diff.txt | ForEach-Object { hadolint $_ }
          }

# black
  black:
    if: contains(fromJson(inputs.linters), 'black')
    runs-on: ${{ inputs.runner_os }}
    steps:
      # Fetching and get difference
      - uses: ./.github/actions/filter-diff
        id: diff
        with:
          base_ref: ${{ github.base_ref }}
          file_pattern: '\.py$'
          output_file: diff.txt
# Installation
      - name: Linux runner setup
        if: runner.os == 'Linux' && steps.diff.outputs.found == 'true'
        run: |
          python3 -m pip install --user black
          USERBASE=$(python3 -m site --user-base)
          echo "USERBASE=$USERBASE" >> "$GITHUB_ENV"
          echo "PATH=$PATH:$USERBASE/bin" >> "$GITHUB_ENV"

      - name: macOS runner setup
        if: runner.os == 'macOS' && steps.diff.outputs.found == 'true'
        shell: bash
        run: |
          python3 -m venv venv
          . venv/bin/activate
          pip install --upgrade pip
          pip install black
          echo "VENV_PATH=$(pwd)/venv/bin" >> "$GITHUB_ENV"

      - name: Windows runner setup
        if: runner.os == 'Windows' && steps.diff.outputs.found == 'true'
        shell: pwsh
        run: |
          pip install black
          $pyver = python -c "import sys; print(f'Python{sys.version_info.major}{sys.version_info.minor}')"
          $userBin = "$env:APPDATA\Python\$pyver\Scripts"
          echo "USER_BIN=$userBin" | Out-File -FilePath $env:GITHUB_ENV -Append
# Linting
      - name: Linting on Linux runner
        if: runner.os == 'Linux' && steps.diff.outputs.found == 'true'
        shell: bash
        run: |
            xargs black --check < diff.txt

      - name: Linting on macOS runner
        if: runner.os == 'macOS' && steps.diff.outputs.found == 'true'
        shell: bash
        run: |
          . venv/bin/activate
            xargs black --check < diff.txt

      - name: Linting on Windows runner
        if: runner.os == 'Windows' && steps.diff.outputs.found == 'true'
        shell: pwsh
        run: |
          Get-Content diff.txt | ForEach-Object { black --check $_ }

# markdownlint
  markdownlint:
    if: contains(fromJson(inputs.linters), 'markdownlint')
    runs-on: ${{ inputs.runner_os }}
    steps:
# Fetching and get difference
      - uses: ./.github/actions/filter-diff
        id: diff
        with:
          base_ref: ${{ github.base_ref }}
          file_pattern: '\.md$'
          output_file: diff.txt
# Installation
      - name: Linux runner setup
        if: runner.os == 'Linux' && steps.diff.outputs.found == 'true'
        run: |
          npm install -g markdownlint-cli

      - name: macOS runner setup
        if: runner.os == 'macOS' && steps.diff.outputs.found == 'true'
        shell: bash
        run: |
          npm install -g markdownlint-cli

      - name: Windows runner setup
        if: runner.os == 'Windows' && steps.diff.outputs.found == 'true'
        shell: pwsh
        run: |
          npm install -g markdownlint-cli
# Linting
      - name: Linting on Linux runner
        if: runner.os == 'Linux' && steps.diff.outputs.found == 'true'
        shell: bash
        run: |
          if [ -f .markdownlint.yaml  ]; then
            xargs markdownlint -c .markdownlint.yaml < diff.txt
          else
            xargs markdownlint < diff.txt
          fi

      - name: Linting on macOS runner
        if: runner.os == 'macOS' && steps.diff.outputs.found == 'true'
        shell: bash
        run: |
          if [ -f .markdownlint.yaml  ]; then
            xargs markdownlint -c .markdownlint.yaml < diff.txt
          else
            xargs markdownlint < diff.txt
          fi

      - name: Linting on Windows runner
        if: runner.os == 'Windows' && steps.diff.outputs.found == 'true'
        shell: pwsh
        run: |
          $env:Path += ";$env:APPDATA\npm"
          if (Test-Path .markdownlint.yaml) {
            Get-Content diff.txt | ForEach-Object { markdownlint -c .markdownlint.yaml $_ }
          } else {
            Get-Content diff.txt | ForEach-Object { markdownlint $_ }
          }

# shfmt
  shfmt:
    if: contains(fromJson(inputs.linters), 'shfmt')
    runs-on: ${{ inputs.runner_os }}
    steps:
# Fetching and get difference
      - uses: ./.github/actions/filter-diff
        id: diff
        with:
          base_ref: ${{ github.base_ref }}
          file_pattern: '\.sh$'
          output_file: diff.txt
# Installation
      - name: Linux runner setup
        if: runner.os == 'Linux' && steps.diff.outputs.found == 'true'
        run: |
          sudo apt-get update && sudo apt-get install -y shfmt

      - name: macOS runner setup
        if: runner.os == 'macOS' && steps.diff.outputs.found == 'true'
        shell: bash
        run: |
          brew install shfmt

      - name: Windows runner setup
        if: runner.os == 'Windows' && steps.diff.outputs.found == 'true'
        shell: pwsh
        run: |
          choco install shfmt
# Linting
      - name: Linting on Linux runner
        if: runner.os == 'Linux' && steps.diff.outputs.found == 'true'
        shell: bash
        run: |
            xargs shfmt -d < diff.txt

      - name: Linting on macOS runner
        if: runner.os == 'macOS' && steps.diff.outputs.found == 'true'
        shell: bash
        run: |
            xargs shfmt -d < diff.txt

      - name: Linting on Windows runner
        if: runner.os == 'Windows' && steps.diff.outputs.found == 'true'
        shell: pwsh
        run: |
          Get-Content diff.txt | ForEach-Object { shfmt -d $_ }

# shellcheck
  shellcheck:
    if: contains(fromJson(inputs.linters), 'shellcheck')
    runs-on: ${{ inputs.runner_os }}
    steps:
# Fetching and get difference
      - uses: ./.github/actions/filter-diff
        id: diff
        with:
          base_ref: ${{ github.base_ref }}
          file_pattern: '\.sh$'
          output_file: diff.txt
# Installation
      - name: Linux runner setup
        if: runner.os == 'Linux' && steps.diff.outputs.found == 'true'
        run: |
          sudo apt-get update && sudo apt-get install -y shellcheck

      - name: macOS runner setup
        if: runner.os == 'macOS' && steps.diff.outputs.found == 'true'
        shell: bash
        run: |
          brew install shellcheck

      - name: Windows runner setup
        if: runner.os == 'Windows' && steps.diff.outputs.found == 'true'
        shell: pwsh
        run: |
          choco install shellcheck
# Linting
      - name: Linting on Linux runner
        if: runner.os == 'Linux' && steps.diff.outputs.found == 'true'
        shell: bash
        run: |
            xargs shellcheck < diff.txt

      - name: Linting on macOS runner
        if: runner.os == 'macOS' && steps.diff.outputs.found == 'true'
        shell: bash
        run: |
            xargs shellcheck < diff.txt

      - name: Linting on Windows runner
        if: runner.os == 'Windows' && steps.diff.outputs.found == 'true'
        shell: pwsh
        run: |
          Get-Content diff.txt | ForEach-Object { shellcheck $_ }
